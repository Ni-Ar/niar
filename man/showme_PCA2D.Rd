% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dim_reduction.R
\name{showme_PCA2D}
\alias{showme_PCA2D}
\title{Given a matrix show me the principal components and other neat things.}
\usage{
showme_PCA2D(
  mat,
  x = 1,
  y = x + 1,
  mt,
  mcol,
  m_fill = mcol,
  m_label = FALSE,
  n_top_var = 500,
  filt_mat = FALSE,
  NA_filt_thrshld = 0.95,
  show_variance = FALSE,
  show_stats = FALSE,
  n_loadings = NULL,
  return_data = FALSE,
  real_aspect_ratio = TRUE,
  ...
)
}
\arguments{
\item{mat}{A matrix}

\item{x}{Integer indicating principal component on X-axis. Default 1.}

\item{y}{Integer indicating principal component on Y-axis. Default \code{x + 1}.}

\item{mt}{\code{data.frame} containing \code{mat} additional information (i.e. metadata). Not required but necessary if one wants label or colour according to specific parameters. When not specified the function will create a simple metadata based on the \code{mat} column names.}

\item{mcol}{Character specifying one column of \code{mt} that contains the matrix column names.}

\item{m_fill}{Character specifying one column name of \code{mt} to use for colouring the samples.}

\item{m_label}{Character or logical specifying one column name of \code{mt} to use for labelling the points in the PCA. Set to \code{FALSE} (default) for omitting labels in plot. Use \code{'mat_col'} if \code{mt} is not defined but you want to use the \code{mat} column names for labelling.}

\item{n_top_var}{Integer: Number of most variable matrix rows to use for \code{prcomp}.}

\item{filt_mat}{Logical. Whether or not to remove certain rows from \code{mat} that contain to many \code{NA}. See \code{NA_filt_thrshld} to specify the threshold for removing.}

\item{NA_filt_thrshld}{Integer between 0 and 1: maximum \% of NA accepted on \code{mat} rows.}

\item{show_variance}{Logical. Show an extra plot with the variance on each component.}

\item{show_stats}{Logical. Show an extra plot with the summary statistics for the data in \code{mat}.}

\item{n_loadings}{Integer indicating how many top and bottom loadings to plot.}

\item{return_data}{Logical. If \code{TRUE} returns rotated data used for plotting instead of the actual plot. Can be used with \code{n_loadings} equal to any positive integer to return all components loadings.}

\item{...}{Set extra parameter for the \code{prcomp} function like \code{scale.} (default \code{FALSE}) and \code{center} (default \code{TRUE}).}

\item{real_aspect_raio}{Logical. If \code{TRUE} (deafault) represent the distances between samples as faithfully as possible. Take into account that the second component is always smaller than the first, sometimes considerably so, thus \code{TRUE} normalize the axis aspect ratio to the relevant ratio for the PCA plot. Adapted from by: https://f1000research.com/articles/5-1492/v2 .}
}
\value{
Either a plot (created with \code{ggplot2}), a combination of plots ( created with \code{patchwork}) or a \code{data.frame}.
}
\description{
Given a matrix show me the principal components and other neat things.
}
\examples{
showme_PCA2D(mat)

showme_PCA2D(mat = mat,  mt = mt, mcol = "sample_name", m_fill = "replicate",
             x = 3, show_stats = T, m_label = F)
             
showme_PCA2D(mat = mat, mt = mt, mcol = "sample_name", n_loadings = 12)  

# Working with metadata
data.frame(sample_name = paste0("Sample", 0:9),
           replicate = c(rep(c(1:3), 3), 1), 
           condition = c(rep("A", 5), rep("Z", 5)),
           stringsAsFactors = FALSE) -> mt            

showme_PCA2D(mat = mat, mt = mt) # does not work cause `mcol` is not specified.

# This works instead because the `mcol` is specified.
showme_PCA2D(mat = mat, mt = mt, mcol = "sample_name", m_label = "replicate")

# This throws a warning dropping `mcol` as there's no metadata provided.
showme_PCA2D(mat = mat, mcol = "sample_name") 
}
